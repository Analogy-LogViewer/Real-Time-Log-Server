syntax = "proto3";
import "google/protobuf/timestamp.proto";
option csharp_namespace = "Analogy.LogServer";

package greet;

// The greeting service definition.
service Analogy {
	// Sends a greeting
	rpc SubscribeForPublishingMessages (stream AnalogyGRPCLogMessage) returns (AnalogyMessageReply);
	rpc SubscribeForConsumingMessages (AnalogyConsumerMessage) returns (stream AnalogyGRPCLogMessage);
}

// The request message containing the user's name.
message AnalogyGRPCLogMessage {
	string Text = 1;
	AnalogyGRPCLogLevel Level = 2;
	google.protobuf.Timestamp Date = 3;
	int32 ProcessId = 4;
	int32 ThreadId = 5;
	string Module = 6;
	string Source = 7;
	string MethodName = 8;
	string FileName = 9;
	int32 LineNumber = 10;
	string MachineName= 11;
	string Category = 12;
	string User = 13;
	map<string,string> AdditionalInformation = 14;
	string Id = 15;
	AnalogyGRPCLogClass Class = 16;
}

// The response message containing the greetings.
message AnalogyMessageReply {
	string message = 1;
}
message AnalogyConsumerMessage {
	string message = 1;
	bool streamOldMessages=2;
}

enum AnalogyGRPCLogClass{
	GENERAL=0;
	/// <summary>
	/// Security logs (audit trails)
	/// </summary>
	SECURITY=1;
	/// <summary>
	/// Hazard issues
	/// </summary>
	HAZARD=2;
	//
	// Summary:
	//Protected Health Information
	PHI=3;
}

enum AnalogyGRPCLogLevel
{
	UNKNOWN=0;
	TRACE=1;
	VERBOSE=2;
	DEBUG=3;
	INFORMATION=4;
	WARNING=5;
	ERROR=6;
	CRITICAL=7;
	ANALOGY=8;
	NONE=9;
}